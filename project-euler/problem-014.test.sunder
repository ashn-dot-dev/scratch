# The following iterative sequence is defined for the set of positive integers:
#
# n → n/2 (n is even)
# n → 3n + 1 (n is odd)
#
# Using the rule above and starting with 13, we generate the following
# sequence:
#   13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
#
# It can be seen that this sequence (starting at 13 and finishing at 1)
# contains 10 terms. Although it has not been proved yet (Collatz Problem), it
# is thought that all starting numbers finish at 1.
#
# Which starting number, under one million, produces the longest chain?
#
# NOTE: Once the chain starts the terms are allowed to go above one million.

import "std";

func next(n: usize) usize {
    if n % 2 == 0 {
        return n / 2;
    }
    return 3 * n + 1;
}

func main() void {
    var max_number = 1u;
    var max_count = 1u;

    for i in 2:1000000 {
        var n = i;
        var count = 1u;
        for n != 1 {
            n = next(n);
            count = count + 1;
        }

        if count > max_count {
            max_number = i;
            max_count = count;
        }
    }

    std::print_format_line(
        std::out(),
        "{} with chain length {}",
        (:[]std::formatter)[
            std::formatter::init[[usize]](&max_number),
            std::formatter::init[[usize]](&max_count)]);
}
################################################################################
# 837799 with chain length 525
